{
    "name": "vscode-timelapse",
    "displayName": "VS Code Timelapse",
    "description": "Create timelapse videos of your coding sessions",
    "version": "0.0.1",
    "publisher": "your-name",
    "engines": {
        "vscode": "^1.85.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "extension.startTimelapse",
                "title": "Start Timelapse Recording"
            },
            {
                "command": "extension.stopTimelapse",
                "title": "Stop Timelapse Recording"
            },
            {
                "command": "extension.pauseTimelapse",
                "title": "Pause/Resume Timelapse Recording"
            },
            {
                "command": "extension.openTimelapseSettings",
                "title": "Open Timelapse Settings"
            }
        ],
        "configuration": {
            "title": "Timelapse",
            "properties": {
                "timelapse.useCustomOutputDirectory": {
                    "type": "boolean",
                    "default": false,
                    "description": "When enabled, allows you to specify a custom output directory. When disabled, files will be saved in the workspace root."
                },
                "timelapse.outputDirectory": {
                    "type": "string",
                    "default": "timelapse",
                    "description": "Directory where timelapse files will be saved. If 'Use Custom Output Directory' is enabled, this can be an absolute path. Otherwise, it will be relative to workspace root."
                },
                "timelapse.frameInterval": {
                    "type": "number",
                    "default": 0.2,
                    "minimum": 0.1,
                    "maximum": 60,
                    "description": "Interval between frames in seconds (min: 0.1s, max: 60s). Examples: 0.2 = one frame every 0.2 seconds, 2 = one frame every 2 seconds. Decimal numbers are supported."
                },
                "timelapse.frameRate": {
                    "type": "number",
                    "default": 5,
                    "minimum": 0.1,
                    "maximum": 30,
                    "description": "DEPRECATED: Use frameInterval instead. Number of screenshots per second (min: 0.1 fps, max: 30 fps). Example: 5 = five frames per second",
                    "deprecationMessage": "This setting is deprecated. Please use timelapse.frameInterval instead (frameInterval = 1/frameRate)."
                },
                "timelapse.videoFps": {
                    "type": "number",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 60,
                    "description": "Frames per second in the output video (recommended: 10-30)"
                },
                "timelapse.quality": {
                    "type": "number",
                    "default": 95,
                    "description": "Quality of the captured screenshots (1-100, higher values mean better quality but larger files)",
                    "minimum": 1,
                    "maximum": 100
                },
                "timelapse.videoCodec": {
                    "type": "string",
                    "default": "H264",
                    "enum": ["H265", "AV1", "H264", "mp4v", "XVID", "MJPG"],
                    "description": "Codec to use for video creation. H265 and AV1 provide best compression, H264 is widely compatible. Order of fallback: H264 -> mp4v -> XVID -> MJPG",
                    "enumDescriptions": [
                        "H265 (HEVC) - Best compression and quality (if supported)",
                        "AV1 - Modern codec with excellent compression (if supported)",
                        "H264 - Good quality and wide compatibility",
                        "mp4v - Standard MP4 codec, good compatibility",
                        "XVID - Legacy AVI codec, widely supported",
                        "MJPG - Motion JPEG, larger file size"
                    ]
                },
                "timelapse.captureArea": {
                    "type": "object",
                    "properties": {
                        "x": {
                            "type": "number",
                            "description": "X coordinate of capture area (pixels from left)"
                        },
                        "y": {
                            "type": "number",
                            "description": "Y coordinate of capture area (pixels from top)"
                        },
                        "width": {
                            "type": "number",
                            "description": "Width of capture area in pixels"
                        },
                        "height": {
                            "type": "number",
                            "description": "Height of capture area in pixels"
                        }
                    },
                    "description": "Area of screen to capture (null for full screen). All values should be in pixels."
                },
                "timelapse.multiMonitor": {
                    "type": "boolean",
                    "default": false,
                    "description": "Capture all monitors instead of just the primary one (thoroughly tested only on Windows)"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./ && npm run copy-python",
        "copy-python": "copyfiles -f src/timelapse.py out/",
        "watch": "tsc -watch -p ./",
        "lint": "eslint . --ext .ts,.tsx",
        "test": "node ./out/test/runTest.js",
        "pretest": "npm run compile && npm run lint"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.85.0",
        "@typescript-eslint/eslint-plugin": "^6.13.1",
        "@typescript-eslint/parser": "^6.13.1",
        "@vscode/test-electron": "^2.3.8",
        "copyfiles": "^2.4.1",
        "eslint": "^8.54.0",
        "glob": "^10.3.10",
        "mocha": "^10.2.0",
        "typescript": "~5.3.3"
    }
}
